import {
  StyleSheet,
  Text,
  View,
  TouchableOpacity,
  ScrollView,
  Flatlist,
} from "react-native";
import React, { useEffect, useState } from "react";
import axios from "axios";

const JobApplyScreen = ({ route, navigation }) => {
  const JobID = route.params.jobid;
  const [jobQuestions, setJobQuestions] = useState([]);

  useEffect(() => {
    fetchData();
  }, []);
  const fetchData = async () => {
    const url = `https://fcbackapi.netlify.app/.netlify/functions/api/jobquestions/${JSON.parse(
      JobID
    )}`;
    console.log(url);

    axios
      .get(url)
      .then((res) => {
        setJobQuestions(res.data);
        console.log(res.data);
      })
      .catch((error) => {
        console.error("Error fetching job details: ", error);
      });
  };

  const handleGoBack = () => {
    navigation.goBack();
  };
  const handleApply = () => {
    // navigation.goBack();
  };

  const renderQuestionItem = ({ item }) => {
    let answerComponent;

    switch (item.QuestionTypeId) {
      case "1":
        answerComponent = <TextInput placeholder="Type your answer" />;
        break;
      case "2":
        answerComponent = (
          <Picker>
            {item.Options.map((option, index) => (
              <Picker.Item key={index} label={option} value={option} />
            ))}
          </Picker>
        );
        break;
      case null:
        // Implement the selection answer component based on your requirements
        // For example, you can use radio buttons or checkboxes
        answerComponent = null;
        break;
      default:
        answerComponent = null;
    }

    return (
      <View style={styles.questionItem}>
        <Text>{item.Question}</Text>
        {answerComponent}
      </View>
    );
  };
  return (
    <View style={styles.container}>
      <View style={styles.header}>
        <TouchableOpacity onPress={handleGoBack}>
          <Text style={styles.goBackButton}>Go Back</Text>
        </TouchableOpacity>
      </View>
      <ScrollView contentContainerStyle={styles.content}>
        <Flatlist
          data={jobQuestions}
          keyExtractor={(item, index) => index.toString()}
          renderItem={({ item }) => (
            <View style={styles.questionItem}>
              <Text>{item.Question}</Text>
            </View>
          )}
        />
      </ScrollView>
      <TouchableOpacity style={styles.applyButton} onPress={handleApply}>
        <Text style={styles.applyButtonText}>Apply Now</Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#f9f9f9",
  },
  header: {
    backgroundColor: "#3498db",
    padding: 15,
    justifyContent: "flex-start",
  },
  goBackButton: {
    color: "#fff",
    fontSize: 18,
  },
  content: {
    padding: 20,
  },
  jobTitle: {
    fontSize: 24,
    fontWeight: "bold",
    marginBottom: 10,
  },
  heading: {
    fontSize: 24,
    fontWeight: "bold",
    marginBottom: 20,
  },
  questionItem: {
    backgroundColor: "white",
    padding: 20,
    marginBottom: 10,
    borderRadius: 10,
  },
  applyButton: {
    backgroundColor: "#3498db",
    padding: 15,
    alignItems: "center",
  },
  applyButtonText: {
    color: "#fff",
    fontSize: 18,
  },
});

export default JobApplyScreen;
